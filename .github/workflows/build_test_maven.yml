---
name: Java CI with Maven and uploading artifact as WAR file
on:
  push:
    branches:
      - master
jobs:
  build-and-test-maven:
    runs-on: ubuntu-latest
    steps:
      - name: Get-Code
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: temurin
          cache: maven
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: build with maven
        run: mvn clean package
      - name: run tests after build
        run: mvn test
      - name: upload war artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: target/angular11-spring-boot2-mysql-0.0.1-SNAPSHOT.war
      - name: Deploy the package to the remote server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: target/angular11-spring-boot2-mysql-0.0.1-SNAPSHOT.war
          remote: angular11-spring-boot2-mysql/demo/actions/angular11-spring-boot2-mysql-0.0.1-SNAPSHOT.war
          host: ${{ secrets.TOMCAT_HOST }}
          username: ${{ secrets.TOMCAT_USERNAME }}
          password: ${{ secrets.TOMCAT_PASSEORD }}
      - name: Run a script on remote server (start the application)
        if: always()
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd angular11-spring-boot2-mysql/demo/actions/ && java -jar
            angular11-spring-boot2-mysql-0.0.1-SNAPSHOT.war &
          host: ${{ secrets.TOMCAT_HOST }}
          user: ${{ secrets.TOMCAT_USERNAME }}
          pass: ${{ secrets.TOMCAT_PASSEORD }}
          args: -tt
